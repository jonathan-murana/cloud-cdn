/*
 * GlobeTraffView.java
 */

package globetraff;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JFileChooser;


/**
 * The application's main frame.
 */
public class GlobeTraffView extends FrameView {



    public GlobeTraffView(SingleFrameApplication app) {
        super(app);
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                //statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        //statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {/*
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
           */ }
        });

        getFrame().pack();
        System.out.println(getFrame().getSize().toString());
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = GlobeTraffApp.getApplication().getMainFrame();
            aboutBox = new GlobeTraffAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        GlobeTraffApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        web_panel = new javax.swing.JPanel();
        web_zipf_slope_label = new javax.swing.JLabel();
        onetimers_label = new javax.swing.JLabel();
        popbias_label = new javax.swing.JLabel();
        pareto_label = new javax.swing.JLabel();
        sizepop_label = new javax.swing.JLabel();
        dynamic_stack_radio = new javax.swing.JRadioButton();
        static_stack_radio = new javax.swing.JRadioButton();
        new_stack_radio = new javax.swing.JRadioButton();
        inde_stack_radio = new javax.swing.JRadioButton();
        stack_label = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        web_panel_II = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        p2p_panel = new javax.swing.JPanel();
        p2p_mz_panel = new javax.swing.JPanel();
        p2p_mz_plateau_label = new javax.swing.JLabel();
        p2p_mz_slope_label = new javax.swing.JLabel();
        p2p_ed_panel = new javax.swing.JPanel();
        p2p_ed_tau_label = new javax.swing.JLabel();
        p2p_ed_lamda_label = new javax.swing.JLabel();
        p2p_birth_label = new javax.swing.JLabel();
        p2p_object_size_label = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        useSamples = new javax.swing.JCheckBox();
        video_panel = new javax.swing.JPanel();
        weibull_radio = new javax.swing.JRadioButton();
        gamma_radio = new javax.swing.JRadioButton();
        zipf_radio = new javax.swing.JRadioButton();
        weibull_k_label = new javax.swing.JLabel();
        weibull_lamda_label = new javax.swing.JLabel();
        gamma_k_label = new javax.swing.JLabel();
        gamma_theta_label = new javax.swing.JLabel();
        video_slope_label = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        other_panel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        web_slider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        video_slider = new javax.swing.JSlider();
        p2p_slider = new javax.swing.JSlider();
        other_slider = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        size_label = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        currDir = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        generate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jSlider5 = new javax.swing.JSlider();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();

        mainPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(globetraff.GlobeTraffApp.class).getContext().getResourceMap(GlobeTraffView.class);
        mainPanel.setFont(resourceMap.getFont("mainPanel.font")); // NOI18N
        mainPanel.setMaximumSize(new java.awt.Dimension(900, 680));
        mainPanel.setMinimumSize(new java.awt.Dimension(900, 680));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(900, 680));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane1.setFont(resourceMap.getFont("jTabbedPane1.font")); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(895, 460));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(895, 460));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(895, 296));

        web_panel.setMaximumSize(new java.awt.Dimension(895, 245));
        web_panel.setMinimumSize(new java.awt.Dimension(895, 245));
        web_panel.setName("web_panel"); // NOI18N
        web_panel.setPreferredSize(new java.awt.Dimension(895, 245));
        web_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        web_panel.add(web_slope_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 190, 72));
        web_panel.add(onetimers_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 190, 72));
        web_panel.add(popbias_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 190, 72));
        web_panel.add(pareto_tail_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 190, 72));
        web_panel.add(sizepop_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 190, 72));
        web_panel.add(stack_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 190, 72));
        web_panel.add(web_redundancy_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(645, 208, -1, -1));

        web_zipf_slope_label.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        web_zipf_slope_label.setText(resourceMap.getString("web_zipf_slope_label.text")); // NOI18N
        web_zipf_slope_label.setName("web_zipf_slope_label"); // NOI18N
        web_panel.add(web_zipf_slope_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, -1, -1));

        onetimers_label.setFont(resourceMap.getFont("onetimers_label.font")); // NOI18N
        onetimers_label.setText(resourceMap.getString("onetimers_label.text")); // NOI18N
        onetimers_label.setName("onetimers_label"); // NOI18N
        web_panel.add(onetimers_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 130, -1, -1));

        popbias_label.setFont(resourceMap.getFont("popbias_label.font")); // NOI18N
        popbias_label.setText(resourceMap.getString("popbias_label.text")); // NOI18N
        popbias_label.setName("popbias_label"); // NOI18N
        web_panel.add(popbias_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 230, -1, -1));

        pareto_label.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        pareto_label.setText(resourceMap.getString("pareto_label.text")); // NOI18N
        pareto_label.setName("pareto_label"); // NOI18N
        web_panel.add(pareto_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        sizepop_label.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        sizepop_label.setText(resourceMap.getString("sizepop_label.text")); // NOI18N
        sizepop_label.setName("sizepop_label"); // NOI18N
        web_panel.add(sizepop_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, 40));

        buttonGroup1.add(dynamic_stack_radio);
        dynamic_stack_radio.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        dynamic_stack_radio.setText(resourceMap.getString("dynamic_stack_radio.text")); // NOI18N
        dynamic_stack_radio.setName("dynamic_stack_radio"); // NOI18N
        dynamic_stack_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dynamic_stack_radioActionPerformed(evt);
            }
        });
        web_panel.add(dynamic_stack_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));

        buttonGroup1.add(static_stack_radio);
        static_stack_radio.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        static_stack_radio.setSelected(true);
        static_stack_radio.setText(resourceMap.getString("static_stack_radio.text")); // NOI18N
        static_stack_radio.setName("static_stack_radio"); // NOI18N
        static_stack_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                static_stack_radioActionPerformed(evt);
            }
        });
        web_panel.add(static_stack_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, -1));

        buttonGroup1.add(new_stack_radio);
        new_stack_radio.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        new_stack_radio.setText(resourceMap.getString("new_stack_radio.text")); // NOI18N
        new_stack_radio.setName("new_stack_radio"); // NOI18N
        new_stack_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_stack_radioActionPerformed(evt);
            }
        });
        web_panel.add(new_stack_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, -1, -1));

        buttonGroup1.add(inde_stack_radio);
        inde_stack_radio.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        inde_stack_radio.setText(resourceMap.getString("inde_stack_radio.text")); // NOI18N
        inde_stack_radio.setName("inde_stack_radio"); // NOI18N
        inde_stack_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inde_stack_radioActionPerformed(evt);
            }
        });
        web_panel.add(inde_stack_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 130, -1, -1));

        stack_label.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        stack_label.setText(resourceMap.getString("stack_label.text")); // NOI18N
        stack_label.setName("stack_label"); // NOI18N
        web_panel.add(stack_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        jLabel14.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        web_panel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, 40));

        jLabel7.setFont(resourceMap.getFont("pareto_label.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        web_panel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("web_panel.TabConstraints.tabTitle"), web_panel); // NOI18N

        web_panel_II.setName("web_panel_II"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(web_lognorm_mean_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));
        jPanel2.add(web_lognorm_std_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));
        jPanel2.add(web_pareto_tail_perc_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, -1));
        jPanel2.add(web_K_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, -1, 27));

        jLabel15.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 45, -1, -1));

        jLabel16.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        javax.swing.GroupLayout web_panel_IILayout = new javax.swing.GroupLayout(web_panel_II);
        web_panel_II.setLayout(web_panel_IILayout);
        web_panel_IILayout.setHorizontalGroup(
            web_panel_IILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(web_panel_IILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );
        web_panel_IILayout.setVerticalGroup(
            web_panel_IILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(web_panel_IILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("web_panel_II.TabConstraints.tabTitle"), web_panel_II); // NOI18N

        p2p_panel.setMaximumSize(new java.awt.Dimension(895, 450));
        p2p_panel.setMinimumSize(new java.awt.Dimension(895, 450));
        p2p_panel.setName("p2p_panel"); // NOI18N
        p2p_panel.setPreferredSize(new java.awt.Dimension(895, 450));
        p2p_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        p2p_panel.add(p2p_birth_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 235, -1, -1));
        //p2p_panel.add(p2p_seeding_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 226, -1, -1));
        p2p_object_size_slider.setEnabled(false);
        p2p_panel.add(p2p_object_size_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(699, 46, -1, -1));
        p2p_panel.add(p2p_redundancy_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 235, -1, -1));

        p2p_mz_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("p2p_mz_panel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("p2p_mz_panel.border.titleFont"))); // NOI18N
        p2p_mz_panel.setMaximumSize(new java.awt.Dimension(59, 150));
        p2p_mz_panel.setMinimumSize(new java.awt.Dimension(59, 150));
        p2p_mz_panel.setName("p2p_mz_panel"); // NOI18N
        p2p_mz_panel.setPreferredSize(new java.awt.Dimension(59, 150));
        p2p_mz_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        p2p_mz_panel.add(mz_slope_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));
        p2p_mz_panel.add(mz_plateau_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 105, -1, -1));

        p2p_mz_plateau_label.setFont(resourceMap.getFont("p2p_mz_plateau_label.font")); // NOI18N
        p2p_mz_plateau_label.setText(resourceMap.getString("p2p_mz_plateau_label.text")); // NOI18N
        p2p_mz_plateau_label.setName("p2p_mz_plateau_label"); // NOI18N
        p2p_mz_panel.add(p2p_mz_plateau_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        p2p_mz_slope_label.setFont(resourceMap.getFont("p2p_mz_slope_label.font")); // NOI18N
        p2p_mz_slope_label.setText(resourceMap.getString("p2p_mz_slope_label.text")); // NOI18N
        p2p_mz_slope_label.setName("p2p_mz_slope_label"); // NOI18N
        p2p_mz_panel.add(p2p_mz_slope_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        p2p_panel.add(p2p_mz_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 307, 195));

        p2p_ed_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("p2p_ed_panel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("p2p_ed_panel.border.titleFont"))); // NOI18N
        p2p_ed_panel.setName("p2p_ed_panel"); // NOI18N
        p2p_ed_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        p2p_ed_panel.add(p2p_tau_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));
        p2p_ed_panel.add(p2p_lamda_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 105, -1, -1));

        p2p_ed_tau_label.setFont(resourceMap.getFont("p2p_ed_tau_label.font")); // NOI18N
        p2p_ed_tau_label.setText(resourceMap.getString("p2p_ed_tau_label.text")); // NOI18N
        p2p_ed_tau_label.setName("p2p_ed_tau_label"); // NOI18N
        p2p_ed_panel.add(p2p_ed_tau_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        p2p_ed_lamda_label.setFont(resourceMap.getFont("p2p_ed_lamda_label.font")); // NOI18N
        p2p_ed_lamda_label.setText(resourceMap.getString("p2p_ed_lamda_label.text")); // NOI18N
        p2p_ed_lamda_label.setToolTipText(resourceMap.getString("p2p_ed_lamda_label.toolTipText")); // NOI18N
        p2p_ed_lamda_label.setName("p2p_ed_lamda_label"); // NOI18N
        p2p_ed_panel.add(p2p_ed_lamda_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 30));

        p2p_panel.add(p2p_ed_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 12, 299, 195));

        p2p_birth_label.setFont(resourceMap.getFont("p2p_birth_label.font")); // NOI18N
        p2p_birth_label.setText(resourceMap.getString("p2p_birth_label.text")); // NOI18N
        p2p_birth_label.setName("p2p_birth_label"); // NOI18N
        p2p_panel.add(p2p_birth_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 215, -1, -1));

        p2p_object_size_label.setFont(resourceMap.getFont("p2p_object_size_label.font")); // NOI18N
        p2p_object_size_label.setText(resourceMap.getString("p2p_object_size_label.text")); // NOI18N
        p2p_object_size_label.setEnabled(false);
        p2p_object_size_label.setName("p2p_object_size_label"); // NOI18N
        p2p_panel.add(p2p_object_size_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 12, -1, -1));

        jLabel9.setFont(resourceMap.getFont("p2p_birth_label.font")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        p2p_panel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 215, 100, -1));

        useSamples.setFont(resourceMap.getFont("useSamples.font")); // NOI18N
        useSamples.setSelected(true);
        useSamples.setText(resourceMap.getString("useSamples.text")); // NOI18N
        useSamples.setName("useSamples"); // NOI18N
        useSamples.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useSamplesStateChanged(evt);
            }
        });
        useSamples.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                useSamplesItemStateChanged(evt);
            }
        });
        p2p_panel.add(useSamples, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 270, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("p2p_panel.TabConstraints.tabTitle"), p2p_panel); // NOI18N

        video_panel.setMaximumSize(new java.awt.Dimension(895, 450));
        video_panel.setMinimumSize(new java.awt.Dimension(895, 450));
        video_panel.setName("video_panel"); // NOI18N
        video_panel.setPreferredSize(new java.awt.Dimension(895, 450));
        video_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        weibull_k_slider.setEnabled(true);
        weibull_lamda_slider.setEnabled(true);
        gamma_k_slider.setEnabled(false);
        gamma_theta_slider.setEnabled(false);
        video_slope_slider.setEnabled(false);
        weibull_k_label.setEnabled(true);
        weibull_lamda_label.setEnabled(true);
        gamma_k_label.setEnabled(false);
        gamma_theta_label.setEnabled(false);
        video_slope_label.setEnabled(false);
        video_panel.add(gamma_k_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));
        video_panel.add(gamma_theta_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, -1, -1));
        video_panel.add(weibull_k_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));
        video_panel.add(weibull_lamda_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));
        video_panel.add(video_slope_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, -1, -1));
        video_object_size_slider.setEnabled(false);
        video_panel.add(video_object_size_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, -1));
        video_panel.add(video_redundancy_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 210, -1, -1));

        buttonGroup2.add(weibull_radio);
        weibull_radio.setFont(resourceMap.getFont("weibull_radio.font")); // NOI18N
        weibull_radio.setSelected(true);
        weibull_radio.setText(resourceMap.getString("weibull_radio.text")); // NOI18N
        weibull_radio.setName("weibull_radio"); // NOI18N
        weibull_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weibull_radioActionPerformed(evt);
            }
        });
        video_panel.add(weibull_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        buttonGroup2.add(gamma_radio);
        gamma_radio.setFont(resourceMap.getFont("gamma_radio.font")); // NOI18N
        gamma_radio.setText(resourceMap.getString("gamma_radio.text")); // NOI18N
        gamma_radio.setName("gamma_radio"); // NOI18N
        gamma_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamma_radioActionPerformed(evt);
            }
        });
        video_panel.add(gamma_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        buttonGroup2.add(zipf_radio);
        zipf_radio.setFont(resourceMap.getFont("zipf_radio.font")); // NOI18N
        zipf_radio.setText(resourceMap.getString("zipf_radio.text")); // NOI18N
        zipf_radio.setName("zipf_radio"); // NOI18N
        zipf_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipf_radioActionPerformed(evt);
            }
        });
        video_panel.add(zipf_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, -1, -1));

        weibull_k_label.setText(resourceMap.getString("weibull_k_label.text")); // NOI18N
        weibull_k_label.setName("weibull_k_label"); // NOI18N
        video_panel.add(weibull_k_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        weibull_lamda_label.setFont(resourceMap.getFont("weibull_lamda_label.font")); // NOI18N
        weibull_lamda_label.setText(resourceMap.getString("weibull_lamda_label.text")); // NOI18N
        weibull_lamda_label.setName("weibull_lamda_label"); // NOI18N
        video_panel.add(weibull_lamda_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        gamma_k_label.setText(resourceMap.getString("gamma_k_label.text")); // NOI18N
        gamma_k_label.setEnabled(false);
        gamma_k_label.setName("gamma_k_label"); // NOI18N
        video_panel.add(gamma_k_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, -1, -1));

        gamma_theta_label.setFont(resourceMap.getFont("gamma_theta_label.font")); // NOI18N
        gamma_theta_label.setText(resourceMap.getString("gamma_theta_label.text")); // NOI18N
        gamma_theta_label.setEnabled(false);
        gamma_theta_label.setName("gamma_theta_label"); // NOI18N
        video_panel.add(gamma_theta_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, -1));

        video_slope_label.setFont(resourceMap.getFont("video_slope_label.font")); // NOI18N
        video_slope_label.setText(resourceMap.getString("video_slope_label.text")); // NOI18N
        video_slope_label.setEnabled(false);
        video_slope_label.setName("video_slope_label"); // NOI18N
        video_panel.add(video_slope_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, -1, -1));

        jLabel27.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setEnabled(false);
        jLabel27.setName("jLabel27"); // NOI18N
        video_panel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        video_panel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(537, 233, 100, -1));

        jTabbedPane1.addTab(resourceMap.getString("video_panel.TabConstraints.tabTitle"), video_panel); // NOI18N

        other_panel.setMaximumSize(new java.awt.Dimension(895, 450));
        other_panel.setMinimumSize(new java.awt.Dimension(895, 450));
        other_panel.setName("other_panel"); // NOI18N
        other_panel.setPreferredSize(new java.awt.Dimension(895, 450));
        other_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        other_slope_slider.setEnabled(false);
        other_panel.add(other_redundancy_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));
        other_panel.add(other_slope_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));
        other_panel.add(other_object_size_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        jLabel11.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        other_panel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 100, -1));

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        other_panel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 100, -1));

        jLabel13.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setEnabled(false);
        jLabel13.setName("jLabel13"); // NOI18N
        other_panel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 100, -1));

        jTabbedPane1.addTab(resourceMap.getString("other_panel.TabConstraints.tabTitle"), other_panel); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel1.border.titleFont"))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(544, 243));
        jPanel1.setMinimumSize(new java.awt.Dimension(544, 243));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        web_slider.setFont(resourceMap.getFont("web_slider.font")); // NOI18N
        web_slider.setMajorTickSpacing(25);
        web_slider.setMinorTickSpacing(5);
        web_slider.setLabelTable(prepareRatioLabels(resourceMap.getFont("web_slider.font")));
        web_slider.setPaintLabels(true);
        web_slider.setPaintTicks(true);
        web_slider.setValue(35);
        web_slider.setName("web_slider"); // NOI18N
        web_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                web_sliderStateChanged(evt);
            }
        });
        jPanel1.add(web_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 190, 72));

        jLabel3.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, -1, -1));

        jLabel5.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, -1, -1));

        video_slider.setFont(resourceMap.getFont("video_slider.font")); // NOI18N
        video_slider.setMajorTickSpacing(25);
        video_slider.setMinorTickSpacing(5);
        video_slider.setLabelTable(prepareRatioLabels(resourceMap.getFont("video_slider.font")));
        video_slider.setPaintLabels(true);
        video_slider.setPaintTicks(true);
        video_slider.setValue(20);
        video_slider.setName("video_slider"); // NOI18N
        video_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                video_sliderStateChanged(evt);
            }
        });
        jPanel1.add(video_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, 72));

        p2p_slider.setFont(resourceMap.getFont("p2p_slider.font")); // NOI18N
        p2p_slider.setMajorTickSpacing(25);
        p2p_slider.setMinorTickSpacing(5);
        p2p_slider.setLabelTable(prepareRatioLabels(resourceMap.getFont("p2p_slider.font")));
        p2p_slider.setPaintLabels(true);
        p2p_slider.setPaintTicks(true);
        p2p_slider.setValue(16);
        p2p_slider.setName("p2p_slider"); // NOI18N
        p2p_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                p2p_sliderStateChanged(evt);
            }
        });
        jPanel1.add(p2p_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 190, 72));

        other_slider.setFont(resourceMap.getFont("other_slider.font")); // NOI18N
        other_slider.setMajorTickSpacing(25);
        other_slider.setMinorTickSpacing(5);
        other_slider.setLabelTable(prepareRatioLabels(resourceMap.getFont("other_slider.font")));
        other_slider.setPaintLabels(true);
        other_slider.setPaintTicks(true);
        other_slider.setValue(29);
        other_slider.setEnabled(false);
        other_slider.setName("other_slider"); // NOI18N
        other_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                other_sliderStateChanged(evt);
            }
        });
        jPanel1.add(other_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Workload", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel3.border.titleFont"))); // NOI18N
        jPanel3.setMaximumSize(new java.awt.Dimension(340, 201));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(548, 82));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(size_slider, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 35, -1, -1));
        jPanel3.add(dir_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 143, -1, -1));

        size_label.setFont(resourceMap.getFont("size_label.font")); // NOI18N
        size_label.setText(resourceMap.getString("size_label.text")); // NOI18N
        size_label.setName("size_label"); // NOI18N
        jPanel3.add(size_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, -1, -1));

        jLabel17.setFont(resourceMap.getFont("jLabel17.font")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 153, -1, -1));

        currDir.setText(resourceMap.getString("currDir.text")); // NOI18N
        currDir.setMinimumSize(new java.awt.Dimension(10, 25));
        currDir.setName("currDir"); // NOI18N
        currDir.setPreferredSize(new java.awt.Dimension(10, 25));
        jPanel3.add(currDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 150, 170, -1));

        reset.setText(resourceMap.getString("reset.text")); // NOI18N
        reset.setName("reset"); // NOI18N
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        generate.setText(resourceMap.getString("generate.text")); // NOI18N
        generate.setMaximumSize(new java.awt.Dimension(52, 30));
        generate.setMinimumSize(new java.awt.Dimension(52, 30));
        generate.setName("generate"); // NOI18N
        generate.setPreferredSize(new java.awt.Dimension(52, 30));
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(generate, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, 0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reset)
                    .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        currDir.setText(dir_chooser.getCurrentDirStr());

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(globetraff.GlobeTraffApp.class).getContext().getActionMap(GlobeTraffView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jSlider5.setName("jSlider5"); // NOI18N

        fileChooser.setName("fileChooser"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void resetAllParameters()
    {

        GlobeTraffApp.getApplication().initializeParameters();
        //General
        web_slider.setValue(GlobeTraffApp.getApplication().getWeb_ratio());
        p2p_slider.setValue(GlobeTraffApp.getApplication().getP2p_ratio());
        video_slider.setValue(GlobeTraffApp.getApplication().getVideo_ratio());
        other_slider.setValue(GlobeTraffApp.getApplication().getOther_ratio());
        size_slider.reset();

        //Web
        web_slope_slider.reset();
        onetimers_slider.reset();
        popbias_slider.reset();
        pareto_tail_slider.reset();
        sizepop_slider.reset();
        stack_slider.reset();
        web_redundancy_slider.reset();
        dynamic_stack_radio.setSelected(false);
        static_stack_radio.setSelected(true);
        new_stack_radio.setSelected(false);
        inde_stack_radio.setSelected(false);

        web_lognorm_mean_slider.reset();
        web_lognorm_std_slider.reset();
        web_pareto_tail_perc_slider.reset();
        web_K_slider.reset();
        
        //P2P
        mz_slope_slider.reset();
        mz_plateau_slider.reset();
        p2p_tau_slider.reset();
        p2p_lamda_slider.reset();
        p2p_birth_slider.reset();
        p2p_object_size_slider.reset();
        p2p_redundancy_slider.reset();

        //Video
        video_slope_slider.reset();
        gamma_theta_slider.reset();
        gamma_k_slider.reset();
        weibull_lamda_slider.reset();
        weibull_k_slider.reset();
        video_object_size_slider.reset();
        video_redundancy_slider.reset();

        //Other
        other_redundancy_slider.reset();
        video_slope_slider.reset();
    }

    private java.util.Hashtable prepareRatioLabels(java.awt.Font font)
    {
        java.util.Hashtable labelTable = new java.util.Hashtable();
        javax.swing.JLabel fifth;
        javax.swing.JLabel fourth;
        javax.swing.JLabel third;
        javax.swing.JLabel second;
        javax.swing.JLabel first;

        fifth = new javax.swing.JLabel("100");
        fourth = new javax.swing.JLabel("75");
        third = new javax.swing.JLabel("50");
        second = new javax.swing.JLabel("25");
        first = new javax.swing.JLabel("0");

        fifth.setFont(font);
        fourth.setFont(font);
        third.setFont(font);
        second.setFont(font);
        first.setFont(font);

        labelTable.put(100, fifth);
        labelTable.put(75, fourth);
        labelTable.put(50, third);
        labelTable.put(25, second);
        labelTable.put(0, first);

        return labelTable;
    }
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed

        resetAllParameters();
    }//GEN-LAST:event_resetActionPerformed
    private void updateTrafficMixSliders(int web_val,int video_val,int p2p_val,int other_val)
    {
        //System.out.println("WEB: "+web_val+",  Video: "+video_val+", P2P: "+p2p_val+", Other: "+other_val);
        //GlobeTraffApp.getApplication().setWeb_ratio(web_val);
        //GlobeTraffApp.getApplication().setVideo_ratio(video_val);
        //GlobeTraffApp.getApplication().setP2p_ratio(p2p_val);
        //GlobeTraffApp.getApplication().setOther_ratio(other_val);
        web_slider.setValue(web_val);
        p2p_slider.setValue(p2p_val);
        video_slider.setValue(video_val);
        other_slider.setValue(other_val);

    }

    private void web_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_web_sliderStateChanged

        int web_val = web_slider.getValue();
        int p2p_val = p2p_slider.getValue();
        int video_val = video_slider.getValue();
        int other_val = other_slider.getValue();

        int residual = 100-web_val-p2p_val-video_val;
        if (residual >= 0)
            other_val = residual;
        else
        {
            other_val = 0;

            if (p2p_val+residual >= 0)
                p2p_val += residual;
            else
            {
                video_val += (p2p_val+residual);
                p2p_val=0;
            }
        }

        updateTrafficMixSliders(web_val,video_val,p2p_val,other_val);
    }//GEN-LAST:event_web_sliderStateChanged

    private void video_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_video_sliderStateChanged

        int web_val = web_slider.getValue();
        int p2p_val = p2p_slider.getValue();
        int video_val = video_slider.getValue();
        int other_val = other_slider.getValue();

        int residual = 100-web_val-p2p_val-video_val;
        if (residual >= 0)
            other_val = residual;
        else
        {
            other_val = 0;

            if (p2p_val+residual >= 0)
                p2p_val += residual;
            else
            {
                web_val += (p2p_val+residual);
                p2p_val=0;
            }
        }

        updateTrafficMixSliders(web_val,video_val,p2p_val,other_val);
    }//GEN-LAST:event_video_sliderStateChanged

    private void p2p_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_p2p_sliderStateChanged
        // TODO add your handling code here:
        int web_val = web_slider.getValue();
        int p2p_val = p2p_slider.getValue();
        int video_val = video_slider.getValue();
        int other_val = other_slider.getValue();

        int residual = 100-web_val-p2p_val-video_val;
        if (residual >= 0)
            other_val = residual;
        else
        {
            other_val = 0;

            if (video_val+residual >= 0)
                video_val += residual;
            else
            {
                web_val += (video_val+residual);
                video_val=0;
            }
        }

        updateTrafficMixSliders(web_val,video_val,p2p_val,other_val);
    }//GEN-LAST:event_p2p_sliderStateChanged

    private void other_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_other_sliderStateChanged

    }//GEN-LAST:event_other_sliderStateChanged

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        // TODO add your handling code here:
        GenerateThread thread = new GenerateThread();
System.out.println(web_pareto_tail_perc_slider.getValue());
        
        thread.setParameters(   web_redundancy_slider.getValue(), //distinctDocsPerc
                                (int)(onetimers_slider.getValue()*100),      //oneTimerPerc
                                web_slope_slider.getValue(), //webZipfSlope
                                pareto_tail_slider.getValue(), //paretoTailIndex
                                sizepop_slider.getValue(),// correlation
                                (int)stack_slider.getValue(), // int stacksize
                                GlobeTraffApp.getApplication().getStack_model(), //int stackmode, TODO: get thisa from the GUI component
                                (int)(web_pareto_tail_perc_slider.getValue()*100), //7,// 20, //percAtTail, //TODO: GUI
                                (int)web_K_slider.getValue(), //9300,//10000, //K, TODO: GUI
                                (int)web_lognorm_mean_slider.getValue(), //9357,//7000, //mean, //TODO: GUI
                                (int)web_lognorm_std_slider.getValue(), //1318,//11000, //std, //TODO: GUI
                                mz_slope_slider.getValue(), // initMZSlope
                                (int)mz_plateau_slider.getValue(), //int MZplateau
                                p2p_tau_slider.getValue(), //tracesTau
                                p2p_lamda_slider.getValue(), //tracesLamda
                                (int)p2p_birth_slider.getValue(), //TODO: remove this or change it with inter-torrent arrival
                                video_slope_slider.getValue(), //videoZipfSlope
                                weibull_k_slider.getValue(), //weibullK
                                weibull_lamda_slider.getValue(), // weibullL
                                gamma_k_slider.getValue(), // gammaK
                                gamma_theta_slider.getValue(),//gamma8
                                0.703, //alpha, //TODO: GUI
                                2.0164, //alphaBirth, //TODO: GUI
                                (int)size_slider.getValue(), // workloadSize
                                (double)web_slider.getValue()/100,  //web_perc
                                (double)p2p_slider.getValue()/100,  //p2p_perc
                                (double)video_slider.getValue()/100, // video_perc
                                (double)other_slider.getValue()/100, // other_perc
                                p2p_redundancy_slider.getValue(), // p2p_redundancy
                                video_redundancy_slider.getValue(), // video_redundancy
                                other_redundancy_slider.getValue(), // other_redundancy
                                other_object_size_slider.getValue(),
                                popbias_slider.getValue(),
                                GlobeTraffApp.getApplication().getPop_mode(),
                                other_slope_slider.getValue(), //otherZipfSlope,
                                (useSamplesBool == true) ? -1:p2p_object_size_slider.getValue()
                                );

        thread.start();

}//GEN-LAST:event_generateActionPerformed

    private void zipf_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipf_radioActionPerformed

        weibull_k_slider.setEnabled(false);
        weibull_lamda_slider.setEnabled(false);
        gamma_k_slider.setEnabled(false);
        gamma_theta_slider.setEnabled(false);
        video_slope_slider.setEnabled(true);
        weibull_k_label.setEnabled(false);
        weibull_lamda_label.setEnabled(false);
        gamma_k_label.setEnabled(false);
        gamma_theta_label.setEnabled(false);
        video_slope_label.setEnabled(true);
        GlobeTraffApp.getApplication().setPop_mode(GlobeTraffApp.getApplication().VIDEO_ZIPF);
}//GEN-LAST:event_zipf_radioActionPerformed

    private void gamma_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamma_radioActionPerformed
        // TODO add your handling code here:
        weibull_k_slider.setEnabled(false);
        weibull_lamda_slider.setEnabled(false);
        gamma_k_slider.setEnabled(true);
        gamma_theta_slider.setEnabled(true);
        video_slope_slider.setEnabled(false);
        weibull_k_label.setEnabled(false);
        weibull_lamda_label.setEnabled(false);
        gamma_k_label.setEnabled(true);
        gamma_theta_label.setEnabled(true);
        video_slope_label.setEnabled(false);
        GlobeTraffApp.getApplication().setPop_mode(GlobeTraffApp.getApplication().VIDEO_GAMMA);
}//GEN-LAST:event_gamma_radioActionPerformed

    private void weibull_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weibull_radioActionPerformed
        // TODO add your handling code here:
        weibull_k_slider.setEnabled(true);
        weibull_lamda_slider.setEnabled(true);
        gamma_k_slider.setEnabled(false);
        gamma_theta_slider.setEnabled(false);
        video_slope_slider.setEnabled(false);
        weibull_k_label.setEnabled(true);
        weibull_lamda_label.setEnabled(true);
        gamma_k_label.setEnabled(false);
        gamma_theta_label.setEnabled(false);
        video_slope_label.setEnabled(false);
        GlobeTraffApp.getApplication().setPop_mode(GlobeTraffApp.getApplication().VIDEO_WEIBULL);
}//GEN-LAST:event_weibull_radioActionPerformed

    private void inde_stack_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inde_stack_radioActionPerformed
        // TODO add your handling code here:
        GlobeTraffApp.getApplication().setStack_model(GlobeTraffApp.getApplication().STACK_INDEPENDENT);
}//GEN-LAST:event_inde_stack_radioActionPerformed

    private void new_stack_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_stack_radioActionPerformed
        // TODO add your handling code here:
        GlobeTraffApp.getApplication().setStack_model(GlobeTraffApp.getApplication().STACK_NEW);
}//GEN-LAST:event_new_stack_radioActionPerformed

    private void static_stack_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_static_stack_radioActionPerformed
        // TODO add your handling code here:
        System.out.println("static stack model");
        GlobeTraffApp.getApplication().setStack_model(GlobeTraffApp.getApplication().STACK_STATIC);
}//GEN-LAST:event_static_stack_radioActionPerformed

    private void dynamic_stack_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dynamic_stack_radioActionPerformed
        // TODO add your handling code here:
        System.out.println("dynamic stack model");
        GlobeTraffApp.getApplication().setStack_model(GlobeTraffApp.getApplication().STACK_DYNAMIC);
}//GEN-LAST:event_dynamic_stack_radioActionPerformed

private void useSamplesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useSamplesStateChanged
// TODO add your handling code here:
}//GEN-LAST:event_useSamplesStateChanged

private void useSamplesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_useSamplesItemStateChanged
// TODO add your handling code here:
    if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED )
    {
        p2p_object_size_slider.setEnabled(false);
        p2p_object_size_label.setEnabled(false);
    }
    else
    {
        p2p_object_size_slider.setEnabled(true);
        p2p_object_size_label.setEnabled(true);
    }
}//GEN-LAST:event_useSamplesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField currDir;
    private javax.swing.JRadioButton dynamic_stack_radio;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel gamma_k_label;
    private javax.swing.JRadioButton gamma_radio;
    private javax.swing.JLabel gamma_theta_label;
    private javax.swing.JButton generate;
    private javax.swing.JRadioButton inde_stack_radio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton new_stack_radio;
    private javax.swing.JLabel onetimers_label;
    private javax.swing.JPanel other_panel;
    private javax.swing.JSlider other_slider;
    private javax.swing.JLabel p2p_birth_label;
    private javax.swing.JLabel p2p_ed_lamda_label;
    private javax.swing.JPanel p2p_ed_panel;
    private javax.swing.JLabel p2p_ed_tau_label;
    private javax.swing.JPanel p2p_mz_panel;
    private javax.swing.JLabel p2p_mz_plateau_label;
    private javax.swing.JLabel p2p_mz_slope_label;
    private javax.swing.JLabel p2p_object_size_label;
    private javax.swing.JPanel p2p_panel;
    private javax.swing.JSlider p2p_slider;
    private javax.swing.JLabel pareto_label;
    private javax.swing.JLabel popbias_label;
    private javax.swing.JButton reset;
    private javax.swing.JLabel size_label;
    private javax.swing.JLabel sizepop_label;
    private javax.swing.JLabel stack_label;
    private javax.swing.JRadioButton static_stack_radio;
    private javax.swing.JCheckBox useSamples;
    private javax.swing.JPanel video_panel;
    private javax.swing.JSlider video_slider;
    private javax.swing.JLabel video_slope_label;
    private javax.swing.JPanel web_panel;
    private javax.swing.JPanel web_panel_II;
    private javax.swing.JSlider web_slider;
    private javax.swing.JLabel web_zipf_slope_label;
    private javax.swing.JLabel weibull_k_label;
    private javax.swing.JLabel weibull_lamda_label;
    private javax.swing.JRadioButton weibull_radio;
    private javax.swing.JRadioButton zipf_radio;
    // End of variables declaration//GEN-END:variables

    public static final int DEFAULT = 0;
    public static final int PARETO_TAIL_INDEX = 1;
    public static final int SIZE_POP_CORR = 2;
    public static final int LRU_STACK = 3;
    public static final int MZ_PLATEAU = 4;
    public static final int ED = 5;
    public static final int TORRENT_BIRTH = 6;
    public static final int SEEDING = 7;
    public static final int P2P_SIZE = 8;
    

    private FloatJSlider size_slider = new FloatJSlider( new FloatJSliderModel(5, 1, 10000, 1 ), true, P2P_SIZE, false );
    
    //Web
    private FloatJSlider web_slope_slider = new FloatJSlider( new FloatJSliderModel( 0.75, 0.0, 1.0, 0.01 ), true, DEFAULT, false );
    private FloatJSlider pareto_tail_slider = new FloatJSlider( new FloatJSliderModel( 1.20, 1.0, 2.0, 0.01 ), true, PARETO_TAIL_INDEX, false );
    private FloatJSlider onetimers_slider = new FloatJSlider( new FloatJSliderModel( 0.7, 0.0, 1.0, 0.01 ), true, DEFAULT, false );
    private FloatJSlider sizepop_slider = new FloatJSlider( new FloatJSliderModel( 0.0, -1.0, 1.0, 0.01 ), true, SIZE_POP_CORR, false );
    private FloatJSlider popbias_slider = new FloatJSlider( new FloatJSliderModel( 0.20, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider stack_slider = new FloatJSlider( new FloatJSliderModel( 100, 0, 1000, 1 ), true, LRU_STACK , false);
    private FloatJSlider web_redundancy_slider = new FloatJSlider( new FloatJSliderModel( 0.30, 0.0, 1.0, 0.01 ), true, DEFAULT, false );

    private FloatJSlider web_lognorm_mean_slider = new FloatJSlider( new FloatJSliderModel(9357, 1, 20480, 1 ), true, P2P_SIZE, false );
    private FloatJSlider web_lognorm_std_slider = new FloatJSlider( new FloatJSliderModel(1318, 1, 20480, 1 ), true, P2P_SIZE, false );
    private FloatJSlider web_pareto_tail_perc_slider = new FloatJSlider( new FloatJSliderModel( 0.07, 0.0, 1.0, 0.01 ), true, DEFAULT, false );
    private FloatJSlider web_K_slider = new FloatJSlider( new FloatJSliderModel(9300, 1, 20480, 1 ), true, P2P_SIZE, false );
    
    //P2P
    private FloatJSlider mz_slope_slider = new FloatJSlider( new FloatJSliderModel( 0.6, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider mz_plateau_slider = new FloatJSlider( new FloatJSliderModel( 20, 0, 100, 1 ), true, MZ_PLATEAU, false );
    private FloatJSlider p2p_tau_slider = new FloatJSlider( new FloatJSliderModel( 87.74, 1.0, 100.0, 0.01 ), true, ED , false);
    private FloatJSlider p2p_lamda_slider = new FloatJSlider( new FloatJSliderModel( 1.1625, 1.0, 100.0, 0.01 ), true, ED, false);
    private FloatJSlider p2p_birth_slider = new FloatJSlider( new FloatJSliderModel( 3807, 1, 10000, 1 ), true, TORRENT_BIRTH, false );
    private FloatJSlider p2p_object_size_slider = new FloatJSlider( new FloatJSliderModel(650, 0, 20480, 1 ), true, P2P_SIZE, true );
    private FloatJSlider p2p_redundancy_slider = new FloatJSlider( new FloatJSliderModel( 0.50, 0.0, 1.0, 0.01 ), true, DEFAULT, false );
    private boolean useSamplesBool = true;
        
    //Video
    private FloatJSlider video_slope_slider = new FloatJSlider( new FloatJSliderModel( 0.668, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider gamma_theta_slider = new FloatJSlider( new FloatJSliderModel(23910, 1, 50000, 1 ), true, P2P_SIZE, false );
    private FloatJSlider gamma_k_slider = new FloatJSlider( new FloatJSliderModel( 0.372, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider weibull_lamda_slider = new FloatJSlider( new FloatJSliderModel(6010, 1, 10000, 1 ), true, P2P_SIZE, false );
    private FloatJSlider weibull_k_slider = new FloatJSlider( new FloatJSliderModel( 0.513, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider video_object_size_slider = new FloatJSlider( new FloatJSliderModel( 8.4, 1.0, 100.0, 0.01 ), true, ED, false );
    private FloatJSlider video_redundancy_slider = new FloatJSlider( new FloatJSliderModel( 0.50, 0.0, 1.0, 0.01 ), true, DEFAULT, false );

    //Other
    private FloatJSlider other_redundancy_slider = new FloatJSlider( new FloatJSliderModel( 0.50, 0.0, 1.0, 0.01 ), true, DEFAULT, false );
    private FloatJSlider other_slope_slider = new FloatJSlider( new FloatJSliderModel( 0.3, 0.0, 1.0, 0.01 ), true, DEFAULT , false);
    private FloatJSlider other_object_size_slider = new FloatJSlider( new FloatJSliderModel( 5, 1.0, 100.0, 0.01 ), true, ED, false );

    private DirChooser dir_chooser = new DirChooser();
    
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}

